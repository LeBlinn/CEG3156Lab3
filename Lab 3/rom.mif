DEPTH=256;
WIDTH=32;
ADDRESS_RADIX=HEX;
DATA_RADIX=HEX;

--sub $1, $2, $3; $t1 = $t2 - $t3 = 55
--00221806
--0000 0000 0010 0010 0001 1000 0000 0110
--000000 00001 00010 00011 00000 000110
--0 1 2 3 0 6

--or $4, $1, $3; $t4 = $t1 or $t3 = FF
--00811801
--0000 0000 1000 0001 0001 1000 0000 0001
--000000 00100 00001 00011 00000 000001
--0 4 1 3 0 1

--sw $4, 3; memory(03) = $t4 = FF
--AC040003
--1010 1100 0000 0100 0000 0000 0000 0011
--101011 00000 00100 0000000000000011
--43 0 4 3

--j 11; jump to address 44
--0800000B
--0000 1000 0000 0000 0000 0000 0000 1011
--000010 00000000000000000000001011
--2 11

--beq $1, $1, -44; loop back to beginning of program
--1021FFD4
--0001 0000 0010 0001 1111 1111 1101 0100
--000100 00001 00001 1111111111010100
--4 1 1 -24

--beq $1, $2, -8; test if $t1 = $t2 ?
--1022FFF8
--0001 0000 0010 0010 1111 1111 1111 1000
--000100 00001 00010 1111111111111000
--4 1 2 -8

CONTENT BEGIN
	-- Use no operations (nop) for default instructions
	[00..FF]: 00000000; -- nop(add $t1, $t1, $t1)

	-- Place MIPS instruction here
	00: 8C020000; --lw $2, 0; $t2 = memory(00) = 55
	01: 8C030001; --lw $3, 1; memory(01) = AA
    02: 00221806; --sub $1, $2, $3; $t1 = $t2 - $t3 = 55
    03: 00811801; --or $4, $1, $3; $t4 = $t1 or $t3 = FF
    04: AC040003; --sw $4, 3; memory(03) = $t4 = FF
    05: 00430820; --add $1, $2, $3; $t1 = $t2 + $t3 = FF
    06: AC010004; --sw $1, 4; memory(04) = $t1 = FF
    07: 8C020003; --lw $2, 3; $t2 = memory(03) = FF
    08: 8C030004; --lw $3, 4; $t3 = memory(04) = FF
    09: 0800000B; --j 11; jump to address 44
    0A: 1021FFD4; --beq $1, $1, -44; loop back to beginning of program
    0B: 1022FFF8; --beq $1, $2, -8; test if $t1 = $t2 ?
END;